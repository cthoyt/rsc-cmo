## ontology metadata ##

id: chmo
title: Chemical Methods Ontology
description: "CHMO, the chemical methods ontology, describes methods used to collect data in chemical experiments, such as mass spectrometry and electron microscopy prepare and separate material for further analysis, such as sample ionisation, chromatography, and electrophoresis synthesise materials, such as epitaxy and continuous vapour deposition It also describes the instruments used in these experiments, such as mass spectrometers and chromatography columns. It is intended to be complementary to the Ontology for Biomedical Investigations (OBI)."
contact:  batchelorc [at] rsc [.] org
creators: 
  - Royal Society of Chemistry
license: https://creativecommons.org/licenses/by/4.0/

## general ODK Settings ##

repo: rsc-cmo
git_main_branch: master
github_org: rsc-ontologies
ci:
  - github_actions
documentation:
  documentation_system: mkdocs
export_formats:
  - owl
  - obo
reasoner: ELK
release_artefacts:
  - full
  - base
robot_java_args: '-Xmx16G'  # max RAM to be used by Robot in ODK

## CHMO specific Settings ##

import_group:
  products:
    - id: bfo
      module_type: mirror
    - id: ro
      use_base: true
      slme_individuals: exclude
    - id: omo
      module_type: mirror
    - id: iao
      make_base: true
    - id: obi
        # As yet, there is no reasoned base release (see: https://github.com/obi-ontology/obi/issues/1815). We currently 
        # refrain from using 'make_base: true' as it would cause alot of indirect dependencies 
        # (e.g. CL, GO, ... classes) be dangling on the root level under owl:Thing, and we'd also lose OBIs alignment
        # decisions, such as CL:cell or CHEBI:'molecular entity' being subsumed under BFO:'material entity'. 
        # So since CHMO is an extension of OBI we build the import module like this.
      #make_base: true
      # using ODK default extract method plus ROBOT filter in chmo.Makefile to remove out-of-scope terms also pulled in 
      module_type: custom
    - id: obcs
      make_base: true
    - id: ms
      make_base: true
      module_type: custom
      # Using ROBOT extract MIREOT in chmo.Makefile, as CHMO only reuses one class from MS
    - id: chebi
      is_large: true
      use_gzipped: true
      # Using ROBOT filter in chmo.Makefile because the default ODK ROBOT extract method pulls in too much from CHEBI.
      module_type: custom
    - id: pato
      use_base: true
